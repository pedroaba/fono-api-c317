// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String
  name     String

  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  invalidatedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessionTests SessionTest[]
  pronounceTests PronounceTest[]
}

model SessionTest {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pronounceTests PronounceTest[]

  @@map("session_tests")
}

model PronounceTest {
  id            String      @id @default(cuid())
  userId        String
  sessionTestId String
  score         Int?
  feedback      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  sessionTest SessionTest @relation(fields: [sessionTestId], references: [id], onDelete: Cascade)

  @@map("pronounce_tests")
}
